@use 'fonts';
@use 'colors' as c;
@use 'variables';

body {
    font-family: "JetBrains Mono", serif;
    background: c.$veryDarkGrey;
    color: c.$almostWhite;
    font-weight: 700;
    height: 100vh;
    display: flex;
    align-items: center;
}

main {
    display: block;
    padding: 0 1rem;
    width: 100%;
    box-sizing: border-box;
}

h1 {
    font-size: 1rem;
    text-align: center;
    color: c.$grey;
    margin: 0 0 1rem;
}

// styles for where the generated password will be shown
.output-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: c.$darkGrey;
    padding: 1.035rem 1rem;
    margin-bottom: .938rem;
    // the default styles of the generated password when no options are chosen
    #output {
        line-height: 31px;
        font-size: 1.5rem;
        opacity: 25%;
        background: c.$darkGrey;
        outline: none;
        border: none;
        width: 100%;
    }

    img {
        width: 17.5px;
        height: 20px;
    }
}

// styles for the form element
.form {
    background: c.$darkGrey;
    font-size: 1rem;
    padding: 1rem;
}

.char-slider {
    margin-top: .438rem;
    p {
        margin: 0 0 .5rem;
        display: flex;
        justify-content: space-between;
    }

    #password-length {
        font-size: 1.5rem;
        color: c.$neonGreen;
    }

    input[type="range"] {
        // removing default appearance
        appearance: none;
        -webkit-appearance: none;

        // implementing custom design
        width: 100%;
        cursor: pointer;
        outline: none;
        height: .5rem;
        background: c.$veryDarkGrey;

        /* // styles for the track - browsers like chrome, safari etc
        &::-webkit-slider-runnable-track {
            height: .5rem;
            background: c.$veryDarkGrey;
        } */
        
       /*  // styles for the track for mozilla
        
        &::-moz-range-track {
            height: .5rem;
            background: c.$veryDarkGrey;
        } */

        // to change the style of the thumb all browsers except firefox
        &::-webkit-slider-thumb {
            // removing default styles 
            appearance: none;
            -webkit-appearance: none;
            /* custom styles */
            height: 28px;
            width: 28px;
            background: c.$almostWhite;
            border-radius: 50%;
            
            /* // slider progress trick
            box-shadow: -407px 0 0 400px c.$neonGreen; */
            transition: .2s ease-in-out;

            // styles for when you hover thumb
            &:hover {
                outline: 1px solid c.$neonGreen;
                background: c.$veryDarkGrey;
            }
        }
        
        // thumb for firefox
        &::-moz-range-thumb { 
            width: 28px;
            height: 28px;
            background: c.$almostWhite;
            border-radius: 50%;
            
            /* // slider progress trick
            box-shadow: -407px 0 0 400px c.$neonGreen; */
            transition: .2s ease-in-out;

            // styles for when you hover thumb
            &:hover {
                outline: 1px solid c.$neonGreen;
                background: c.$veryDarkGrey;
            }
        }

        // focus and active styles for thumb

        // all browsers except firefox
        &:active::-webkit-slider-thumb, 
        &:focus::-webkit-slider-thumb {
            outline: 1px solid c.$neonGreen;
            background: c.$veryDarkGrey;
        }
        
        // mozilla 
        
        &:active::-moz-range-thumb,
        &:focus::-moz-range-thumb {
            outline: 1px solid c.$neonGreen;
            background: c.$veryDarkGrey;
        }
    }
}

.options {
    display: flex;
    flex-direction: column;
    gap: 1.05rem;
    margin-top: 2.5rem;
  
    .form-control {
      display: grid;
      grid-template-columns: 1rem auto;
      column-gap: 1.5rem;
    }

    label:hover {
        cursor: pointer;
    }
  
    input[type="checkbox"] {
      // Removing default styles
      -webkit-appearance: none;
      appearance: none;
      margin: 0;
      background: none;
      width: 20px;
      height: 20px;
      border: 2.5px solid c.$almostWhite;
      display: grid;
      place-content: center;

      &:hover {
        border: 2px solid c.$neonGreen;
        cursor: pointer;
      }
    }
  
    // Checked state with custom image
    input[type="checkbox"]:checked {
      border: none;
      background: c.$neonGreen;  // background color when checked
      transition: .25s ease-in-out;
    }
  
    input[type="checkbox"]::before {
      content: "";
      width: 11.39px;  // Adjusting to fit in the box
      height: 8px;
      background: url('../../assets/images/icon-check.svg') no-repeat center center;
      background-size: contain;
      opacity: 0;   // Hidden by default
      transition: opacity 0.25s ease-in-out;
    }
  
    input[type="checkbox"]:checked::before {
      opacity: 1;   // Show the image when checked
    }
}

.strength-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 2rem;
    background: c.$veryDarkGrey;
    color: c.$grey;
    text-transform: uppercase;
    font-size: 1.125rem;
    padding: .75rem 1.105rem;

    #level {
        display: flex;
        align-items: center;
        gap: 1rem;
        color: c.$almostWhite;
    }

    .strength-indicator {
        display: flex;
        align-items: center;
        gap: .5rem;
        // creating rectangles to indicate the strength of the password
        span {
            width: 10px;
            height: 28px;
            border: 2px solid c.$almostWhite;
            box-sizing: border-box;
        }
    } 
}

button.submit {
    margin-top: 1.2rem;
    padding: 1.185rem 0;
    background: c.$neonGreen;
    box-sizing: border-box;
    width: 100%;
    text-transform: uppercase;
    color: c.$darkGrey;
    box-sizing: border-box;
    outline: none;
    border: none;

    &:hover {
        cursor: pointer;
        background: none;
        border: 1px solid c.$neonGreen;
        color: c.$neonGreen;
        // adding a filter to change the color on hover
        img {
            filter: brightness(0) saturate(100%) invert(97%) sepia(86%) saturate(682%) hue-rotate(53deg) brightness(106%) contrast(101%);
        }
    }
}

